# Simple workflow for deploying static content to Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting any branch
  push:
    branches: ["*"]
    tags:
      - "*.*" # Triggers on tags that resemble versioning (e.g., v1.0.0)
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Determine Deploy Path
        id: vars
        run: |
          # Determine if this is a branch or tag, and set DEPLOY_PATH accordingly
          if [ "${{ github.ref_type }}" == "branch" ]; then
            export DEPLOY_PATH="${{ github.ref_name }}"
          elif [ "${{ github.ref_type }}" == "tag" ]; then
            export DEPLOY_PATH="releases/${{ github.ref_name }}"
          fi
          echo "DEPLOY_PATH=$DEPLOY_PATH" >> $GITHUB_ENV

      - name: Prepare Deployment Directory
        run: |
          # Create the target deployment directory
          mkdir -p "public/$DEPLOY_PATH"
          # Copy all contents except the 'public' directory itself to avoid recursion issues
          shopt -s extglob
          cp -r !(public) "public/$DEPLOY_PATH"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload only the 'public' directory containing the structured deployment
          path: 'public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
